name: Code Quality Check

on:
  pull_request:
    types: [closed]
    branches: [main, master, develop]
  push:
    branches: [main, master, develop]

jobs:
  code-quality:
    name: Lint, Format & Build
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true || github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Cache Nx
        uses: actions/cache@v4
        with:
          path: .nx/cache
          key: ${{ runner.os }}-nx-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nx-

      - name: Run ESLint (Fast)
        run: npx nx run-many -t lint -p cloud humid platform --parallel=3 --skip-nx-cache=false
        continue-on-error: false

      - name: Check code formatting (Fast)
        run: npx prettier --check "apps/**/*.{ts,js}" --ignore-path .gitignore
        continue-on-error: false

      - name: Build applications (Essential only)
        run: npx nx run-many -t build -p humid cloud --parallel=2
        continue-on-error: false

  quick-test:
    name: Quick Tests (Optional)
    runs-on: ubuntu-latest
    needs: code-quality
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Quick unit tests
        run: |
          npx nx test humid --passWithNoTests --maxWorkers=2 || echo "Tests completed (may have failures)"
          npx nx test cloud --watch=false --maxWorkers=2 || echo "Tests completed (may have failures)"
        continue-on-error: true

  notify-status:
    name: Notify Status
    runs-on: ubuntu-latest
    needs: [code-quality, quick-test]
    if: always()

    steps:
      - name: Notify success
        if: needs.code-quality.result == 'success'
        run: |
          echo "✅ Code quality checks passed successfully!"
          echo "✅ Linting: Passed"
          echo "✅ Formatting: Passed"
          echo "✅ Build: Passed"

      - name: Notify issues
        if: needs.code-quality.result == 'failure'
        run: |
          echo "⚠️ Code quality checks found issues."
          echo "Please check the workflow logs for details."
